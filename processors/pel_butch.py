# processors/pel_kyle.py
from .pel_common import process as pel_process
import sys
import streamlit as st

def process(df):
    """Shopify processing for John with additional customization"""
    # Define West Coast states
    states = ['OH']

    zip = [
    # Trumbull County
    '44401', '44402', '44403', '44404', '44405', '44410', '44411', '44412', '44413', '44417', '44418', '44420',
    '44425', '44428', '44429', '44430', '44436', '44437', '44438', '44440', '44441', '44442', '44443', '44444',
    '44446', '44449', '44450', '44451', '44452', '44453', '44470', '44471', '44481', '44482', '44483', '44484',
    '44485', '44486', '44490', '44491', '44492',

    # Portage County
    '44201', '44202', '44211', '44214', '44215', '44224', '44231', '44240', '44241', '44242', '44243', '44255',
    '44260', '44265', '44266', '44272', '44274', '44275', '44278', '44288', '44411', '44429', '44446', '44460',
    '44470', '44485',

    # Summit County
    '44056', '44067', '44087', '44141', '44203', '44210', '44216', '44221', '44223', '44224', '44232', '44236',
    '44250', '44262', '44264', '44278', '44286', '44301', '44302', '44303', '44304', '44305', '44306', '44307',
    '44308', '44309', '44310', '44311', '44312', '44313', '44314', '44315', '44316', '44317', '44319', '44320',
    '44321', '44325', '44326', '44328', '44333', '44334', '44372', '44393', '44396', '44398', '44399',

    # Mahoning County
    '44401', '44402', '44403', '44405', '44406', '44408', '44409', '44410', '44411', '44412', '44413', '44415',
    '44416', '44417', '44418', '44420', '44422', '44423', '44425', '44427', '44429', '44430', '44431', '44432',
    '44436', '44440', '44441', '44442', '44443', '44444', '44445', '44446', '44449', '44450', '44451', '44452',
    '44453', '44454', '44455', '44471', '44472', '44473', '44490', '44493', '44501', '44502', '44503', '44504',
    '44505', '44506', '44507', '44509', '44510', '44511', '44512', '44513', '44514', '44515', '44555', '44601',
    '44609',

    # Stark County
    '44601', '44608', '44614', '44615', '44618', '44619', '44621', '44624', '44626', '44629', '44630', '44632',
    '44634', '44641', '44643', '44644', '44645', '44646', '44647', '44649', '44651', '44652', '44653', '44654',
    '44656', '44657', '44662', '44666', '44669', '44670', '44675', '44680', '44681', '44685', '44687', '44688',
    '44689', '44699', '44701', '44702', '44703', '44704', '44705', '44706', '44707', '44708', '44709', '44710',
    '44711', '44714', '44718', '44720', '44721', '44730', '44735', '44750', '44767', '44799',

    # Columbiana County
    '43920', '43930', '43932', '43938', '43939', '43940', '43941', '43942', '43943', '43945', '43948', '43950',
    '43951', '43952', '43953', '43961', '43962', '43963', '43964', '43968', '43971', '44401', '44408', '44413',
    '44415', '44422', '44423', '44424', '44425', '44427', '44431', '44432', '44441', '44442', '44443', '44445',
    '44455', '44460', '44490', '44609', '44625', '44634', '44640', '44644', '44657', '44665',

    # Jefferson County (OH)
    '43901', '43902', '43903', '43905', '43908', '43910', '43912', '43913', '43915', '43917', '43925', '43926',
    '43928', '43930', '43932', '43934', '43935', '43938', '43939', '43941', '43942', '43943', '43944', '43945',
    '43947', '43948', '43950', '43951', '43952', '43953', '43961', '43962', '43963', '43964', '43968', '43971',
    '43972', '43973', '43974', '43976', '43977', '43981', '43983', '43984', '43985', '43986', '43987', '43988',

    # Geauga County
    '44021', '44022', '44023', '44024', '44026', '44028', '44032', '44033', '44039', '44046', '44060', '44062',
    '44064', '44065', '44072', '44073', '44080', '44082', '44086', '44087', '44128', '44139', '44202', '44231',
    '44235', '44236', '44255', '44272', '44285', '44286',

    # Lake County
    '44003', '44010', '44024', '44026', '44030', '44032', '44033', '44039', '44041', '44045', '44047', '44048',
    '44057', '44060', '44061', '44062', '44064', '44065', '44070', '44072', '44073', '44076', '44077', '44080',
    '44081', '44082', '44084', '44085', '44086', '44087', '44088', '44089', '44092', '44093', '44094', '44095',
    '44096', '44097', '44099', '44124', '44143', '44256',

    # Medina County
    '44135', '44136', '44141', '44145', '44149', '44171', '44203', '44210', '44211', '44212', '44214', '44215',
    '44216', '44217', '44221', '44230', '44231', '44233', '44235', '44236', '44237', '44251', '44253', '44254',
    '44256', '44258', '44262', '44270', '44273', '44274', '44275', '44276', '44278', '44280', '44281', '44282',
    '44285', '44286', '44287', '44288', '44321',

    # Cuyahoga County
    '44001', '44004', '44011', '44012', '44013', '44014', '44017', '44021', '44022', '44040', '44047', '44070',
    '44101', '44102', '44103', '44104', '44105', '44106', '44107', '44108', '44109', '44110', '44111', '44112',
    '44113', '44114', '44115', '44116', '44117', '44118', '44119', '44120', '44121', '44122', '44123', '44124',
    '44125', '44126', '44127'
    ]
    
    # Filter the dataset to include only Ohio and specified ZIP codes
    df = df[df['State:'].isin(states)]
    df = df[df['Zip'].isin(zip)]
    
    # Check if the filtered DataFrame is empty
    if df.empty:
        st.warning(f"No entries found for states: {', '.join(states)}.")
        sys.exit()  # This will terminate the program
    
    # If we have data, continue with processing
    df = pel_process(df)
    
    return df